/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package co.edu.unicolombo.s3.poo.inventory.library.Guis.Client;

import co.edu.unicolombo.s3.poo.inventory.library.Domain.Models.Client;
import co.edu.unicolombo.s3.poo.inventory.library.Domain.Models.Reservation;
import co.edu.unicolombo.s3.poo.inventory.library.Service.Handlers.Commands.Client.*;
import co.edu.unicolombo.s3.poo.inventory.library.Service.Handlers.Queries.Client.*;
import javax.swing.*;
import java.util.*;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Jean
 */
public class ManageClient extends javax.swing.JDialog {

        private CreateClientCommmands createClientCommmands;
        private GetAllClientsQueries getAllClientsQueries;
        private GetClientByNameQueries getClientByNameQueries;
        private UpdateClientCommands updatecClientCommands;
        private DeleteCLientCommands deleteCLientCommands;
        private Map<Integer, Client> clientMap = new HashMap<>();

        /**
         * Creates new form ManageClient
         */
        public ManageClient(java.awt.Frame parent, boolean modal,
                        CreateClientCommmands createClientCommmands,
                        GetAllClientsQueries getAllClientsQueries,
                        GetClientByNameQueries getClientByNameQueries,
                        UpdateClientCommands updatecClientCommands,
                        DeleteCLientCommands deleteCLientCommands) {
                super(parent, modal);
                initComponents();
                this.createClientCommmands = createClientCommmands;
                this.getAllClientsQueries = getAllClientsQueries;
                this.getClientByNameQueries = getClientByNameQueries;
                this.updatecClientCommands = updatecClientCommands;
                this.deleteCLientCommands = deleteCLientCommands;
                addToClientsOnTable();
        }

        private void addToClientsOnTable() {
                try {
                        var clients = getAllClientsQueries.getListClients();
                        filterTableWithClients(clients);

                } catch (Exception e) {
                        JOptionPane.showMessageDialog(this, e.getMessage());
                }
        }

        /**
         * This method is called from within the constructor to initialize the form.
         * WARNING: Do NOT modify this code. The content of this method is always
         * regenerated by the Form Editor.
         */
        @SuppressWarnings("unchecked")
        // <editor-fold defaultstate="collapsed" desc="Generated
        // <editor-fold defaultstate="collapsed" desc="Generated
        // Code">//GEN-BEGIN:initComponents
        private void initComponents() {

                jScrollPane1 = new javax.swing.JScrollPane();
                jList1 = new javax.swing.JList<>();
                jPanel1 = new javax.swing.JPanel();
                jScrollPane2 = new javax.swing.JScrollPane();
                jTable1 = new javax.swing.JTable();
                jLabel2 = new javax.swing.JLabel();
                bottonNewClient = new javax.swing.JButton();
                buttonDelete = new javax.swing.JButton();
                buttonUpdate = new javax.swing.JButton();
                lookFoorFiled = new org.jdesktop.swingx.JXSearchField();
                jLabel1 = new javax.swing.JLabel();

                jList1.setModel(new javax.swing.AbstractListModel<String>() {
                        String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };

                        public int getSize() {
                                return strings.length;
                        }

                        public String getElementAt(int i) {
                                return strings[i];
                        }
                });
                jScrollPane1.setViewportView(jList1);

                setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

                jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(
                                new javax.swing.border.LineBorder(new java.awt.Color(0, 153, 153), 4, true),
                                "Clients"));

                jTable1.setModel(new javax.swing.table.DefaultTableModel(
                                new Object[][] {
                                                { null, null, null },
                                                { null, null, null },
                                                { null, null, null },
                                                { null, null, null }
                                },
                                new String[] {
                                                "Name", "Address", "Phone Number"
                                }));
                jScrollPane2.setViewportView(jTable1);

                jLabel2.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
                jLabel2.setText("Look For: ");

                bottonNewClient.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
                bottonNewClient.setText("New");
                bottonNewClient.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                bottonNewClientActionPerformed(evt);
                        }
                });

                buttonDelete.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
                buttonDelete.setText("Delete");
                buttonDelete.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                buttonDeleteActionPerformed(evt);
                        }
                });

                buttonUpdate.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
                buttonUpdate.setText("Update");
                buttonUpdate.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                buttonUpdateActionPerformed(evt);
                        }
                });

                lookFoorFiled.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                lookFoorFiledActionPerformed(evt);
                        }
                });

                javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
                jPanel1.setLayout(jPanel1Layout);
                jPanel1Layout.setHorizontalGroup(
                                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(jPanel1Layout.createSequentialGroup()
                                                                .addContainerGap()
                                                                .addComponent(jScrollPane2,
                                                                                javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                                567,
                                                                                javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addGap(18, 18, 18)
                                                                .addGroup(jPanel1Layout.createParallelGroup(
                                                                                javax.swing.GroupLayout.Alignment.LEADING)
                                                                                .addGroup(jPanel1Layout
                                                                                                .createSequentialGroup()
                                                                                                .addComponent(buttonUpdate)
                                                                                                .addGap(18, 18, 18)
                                                                                                .addComponent(buttonDelete)
                                                                                                .addPreferredGap(
                                                                                                                javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                                                                .addComponent(bottonNewClient)
                                                                                                .addGap(0, 0, Short.MAX_VALUE))
                                                                                .addGroup(jPanel1Layout
                                                                                                .createSequentialGroup()
                                                                                                .addComponent(jLabel2)
                                                                                                .addPreferredGap(
                                                                                                                javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                                                .addComponent(lookFoorFiled,
                                                                                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                                                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                                                                                Short.MAX_VALUE)))
                                                                .addContainerGap()));
                jPanel1Layout.setVerticalGroup(
                                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout
                                                                .createSequentialGroup()
                                                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE,
                                                                                Short.MAX_VALUE)
                                                                .addGroup(jPanel1Layout.createParallelGroup(
                                                                                javax.swing.GroupLayout.Alignment.LEADING,
                                                                                false)
                                                                                .addGroup(jPanel1Layout
                                                                                                .createSequentialGroup()
                                                                                                .addGroup(jPanel1Layout
                                                                                                                .createParallelGroup(
                                                                                                                                javax.swing.GroupLayout.Alignment.BASELINE)
                                                                                                                .addComponent(jLabel2)
                                                                                                                .addComponent(lookFoorFiled,
                                                                                                                                javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                                                                                33,
                                                                                                                                javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                                                .addPreferredGap(
                                                                                                                javax.swing.LayoutStyle.ComponentPlacement.RELATED,
                                                                                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                                                                                Short.MAX_VALUE)
                                                                                                .addGroup(jPanel1Layout
                                                                                                                .createParallelGroup(
                                                                                                                                javax.swing.GroupLayout.Alignment.BASELINE)
                                                                                                                .addComponent(bottonNewClient)
                                                                                                                .addComponent(buttonDelete)
                                                                                                                .addComponent(buttonUpdate)))
                                                                                .addComponent(jScrollPane2,
                                                                                                javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                                                413,
                                                                                                javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                .addContainerGap()));

                jLabel1.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
                jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
                jLabel1.setText("List Clients");

                javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
                getContentPane().setLayout(layout);
                layout.setHorizontalGroup(
                                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(layout.createSequentialGroup()
                                                                .addGroup(layout.createParallelGroup(
                                                                                javax.swing.GroupLayout.Alignment.LEADING)
                                                                                .addGroup(layout.createSequentialGroup()
                                                                                                .addGap(317, 317, 317)
                                                                                                .addComponent(jLabel1))
                                                                                .addGroup(layout.createSequentialGroup()
                                                                                                .addGap(32, 32, 32)
                                                                                                .addComponent(jPanel1,
                                                                                                                javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                                                                                javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE,
                                                                                Short.MAX_VALUE)));
                layout.setVerticalGroup(
                                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(layout.createSequentialGroup()
                                                                .addContainerGap()
                                                                .addComponent(jLabel1,
                                                                                javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                                16,
                                                                                javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addPreferredGap(
                                                                                javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                                .addComponent(jPanel1,
                                                                                javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                                                javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE,
                                                                                Short.MAX_VALUE)));

                pack();
        }// </editor-fold>//GEN-END:initComponents

        private void lookFoorFiledActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_lookFoorFiledActionPerformed
                String serchField = lookFoorFiled.getText().trim();

                try {
                        if (serchField.isEmpty()) {
                                var allClients = getAllClientsQueries.getListClients();
                                filterTableWithClients(allClients);
                                return;
                        }

                        if (serchField.length() >= 9) {
                                Client client = getClientByNameQueries.getClientByName(serchField);
                                if (client != null) {
                                    filterTableWithClients(Collections.singletonList(client));
                                } else {
                                    javax.swing.JOptionPane.showMessageDialog(this, "No se encontró ningún cliente con ese nombre.", "Error", JOptionPane.ERROR_MESSAGE);
                                    var allClients = getAllClientsQueries.getListClients();
                                    filterTableWithClients(allClients);
                                }
                            }
                } catch (Exception e) {
                        javax.swing.JOptionPane.showMessageDialog(this, e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
                }
        }// GEN-LAST:event_lookFoorFiledActionPerformed


        private void buttonUpdateActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_buttonUpdateActionPerformed
                var selectedRow = jTable1.getSelectedRow();
                if (selectedRow >= 0) {
                        Client client = clientMap.get(selectedRow);
                        if (client == null) {
                                JOptionPane.showMessageDialog(this, "he client is null");
                                return;
                        }
                        openUpdateClientWindow(client);
                } else {
                        javax.swing.JOptionPane.showMessageDialog(this, "Please select a book from the table.");
                }
        }// GEN-LAST:event_buttonUpdateActionPerformed

        private void buttonDeleteActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_buttonDeleteActionPerformed
                int selectedRow = jTable1.getSelectedRow();
                if (selectedRow >= 0) {
                        Client selectedClienyt = clientMap.get(selectedRow);
                        deleteClient(selectedClienyt);
                        JOptionPane.showMessageDialog(this, "Client delete sucessfully");
                        updateTable();
                } else {
                        JOptionPane.showMessageDialog(null, "Please select a book from the table.");
                }
        }// GEN-LAST:event_buttonDeleteActionPerformed

        private void deleteClient(Client client) {
                try {
                        deleteCLientCommands.deleteClient(client);
                } catch (Exception e) {
                        JOptionPane.showMessageDialog(this, e.getMessage());
                }
        }

        private void updateTable() {
                clientMap.clear();
                DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
                model.setRowCount(0);
                try {
                        List<Client> clients = getAllClientsQueries.getListClients();

                        if (clients.isEmpty()) {
                                JOptionPane.showMessageDialog(this, "The list is empty.");
                        }

                        for (int i = 0; i < clients.size(); i++) {
                                var client = clients.get(i);
                                clientMap.put(i, client);
                                model.addRow(new Object[] {
                                                client.getName(),
                                                client.getAddress(),
                                                client.getPhoneNumber(),
                                });
                        }
                } catch (Exception e) {
                        javax.swing.JOptionPane.showMessageDialog(this,
                                        e.getMessage());
                }

        }

        private void bottonNewClientActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_bottonNewClientActionPerformed
                openCreateClientWIndow();
        }// GEN-LAST:event_bottonNewClientActionPerformed

        private void openUpdateClientWindow(Client client) {
                var updateClientWindow = new UpdateClient(new JFrame(), true, client,
                                updatecClientCommands);
                        updateClientWindow.setOnUpdateClient(() -> {
                    int selectRow = jTable1.getSelectedRow();
                    if (selectRow >= 0) {
                        updateTable();
                    }
                });
                updateClientWindow.setLocationRelativeTo(this);
                updateClientWindow.setVisible(true);
        }

        private void openCreateClientWIndow() {
                var createClientWindow = new CreateClient(new javax.swing.JFrame(), true,
                                createClientCommmands);

                createClientWindow.setOnClientCreate(() -> {
                        updateTable();

                });
                createClientWindow.setLocationRelativeTo(this);
                createClientWindow.setVisible(true);
        }

        private void filterTableWithClients(List<Client> clients) {
                var tableModel = new javax.swing.table.DefaultTableModel(
                                new Object[][] {},
                                new String[] { "Name", "Address", "PhoneNumber" });
                tableModel.setRowCount(0);
                clientMap.clear();
                int rowIndex = 0;
                for (Client client : clients) {
                        tableModel.addRow(new Object[] {
                                        client.getName(),
                                        client.getAddress(),
                                        client.getPhoneNumber()
                        });

                        clientMap.put(rowIndex++, client);
                }
                jTable1.setModel(tableModel);
                jTable1.repaint();
        }

        /**
         * @param args the command line arguments
         */
        // public static void main(String args[]) {
        // /* Set the Nimbus look and feel */
        // //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code
        // (optional) ">
        // /* If Nimbus (introduced in Java SE 6) is not available, stay with the
        // default look and feel.
        // * For details see
        // http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
        // */
        // try {
        // for (javax.swing.UIManager.LookAndFeelInfo info :
        // javax.swing.UIManager.getInstalledLookAndFeels()) {
        // if ("Nimbus".equals(info.getName())) {
        // javax.swing.UIManager.setLookAndFeel(info.getClassName());
        // break;
        // }
        // }
        // } catch (ClassNotFoundException ex) {
        // java.util.logging.Logger.getLogger(ManageClient.class.getName()).log(java.util.logging.Level.SEVERE,
        // null, ex);
        // } catch (InstantiationException ex) {
        // java.util.logging.Logger.getLogger(ManageClient.class.getName()).log(java.util.logging.Level.SEVERE,
        // null, ex);
        // } catch (IllegalAccessException ex) {
        // java.util.logging.Logger.getLogger(ManageClient.class.getName()).log(java.util.logging.Level.SEVERE,
        // null, ex);
        // } catch (javax.swing.UnsupportedLookAndFeelException ex) {
        // java.util.logging.Logger.getLogger(ManageClient.class.getName()).log(java.util.logging.Level.SEVERE,
        // null, ex);
        // }
        // //</editor-fold>
        //
        // /* Create and display the dialog */
        //// java.awt.EventQueue.invokeLater(new Runnable() {
        //// public void run() {
        //// ManageClient dialog = new ManageClient(new javax.swing.JFrame(), true);
        //// dialog.addWindowListener(new java.awt.event.WindowAdapter() {
        //// @Override
        //// public void windowClosing(java.awt.event.WindowEvent e) {
        //// System.exit(0);
        //// }
        //// });
        //// dialog.setVisible(true);
        //// }
        //// });
        // }

        // Variables declaration - do not modify//GEN-BEGIN:variables
        private javax.swing.JButton bottonNewClient;
        private javax.swing.JButton buttonDelete;
        private javax.swing.JButton buttonUpdate;
        private javax.swing.JLabel jLabel1;
        private javax.swing.JLabel jLabel2;
        private javax.swing.JList<String> jList1;
        private javax.swing.JPanel jPanel1;
        private javax.swing.JScrollPane jScrollPane1;
        private javax.swing.JScrollPane jScrollPane2;
        private javax.swing.JTable jTable1;
        private org.jdesktop.swingx.JXSearchField lookFoorFiled;
        // End of variables declaration//GEN-END:variables
}
